version: 2.1

jobs:
  build_app:
    description: Building image with custom docker
    docker:
      # using custom image, see .circleci/images/primary/Dockerfile
      - image: alpine:3.12.0
    
    steps:
      - checkout
      - setup_remote_docker
#          docker_layer_caching: true
#      - run:
#          name: Test the source
#          command: |
#            echo "test"
      - run:
          name: INstall pre-req
          command: |
            apk add --no-cache ca-certificates
            mkdir /usr/share/ca-certificates/extra
            cp -R /tmp/cert/* /usr/share/ca-certificates/extra/ 
            update-ca-certificates
            
      - run:
          name: Install Docker client
          command: |
            set -x
            apk add --no-cache docker-cli python3
            apk add --no-cache --virtual .docker-compose-deps python3-dev libffi-dev openssl-dev gcc libc-dev make 
            docker version
            docker ps
            pip3 install docker-compose
            apk del .docker-compose-deps
            docker-compose version
            
      # - run:
      #     name: Install Docker Compose
      #     command: |
      #       set -x
      #       sudo -i
      #       curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
      #       chmod +x /usr/local/bin/docker-compose
      
      - run:
          name: Build docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            echo $DOCKER_PASSWORD | docker login --username $DOCKER_USER --password-stdin
            echo ${DOCKER_HUB_CONTEXT}/${PROJECT_ID}:${TAG}
            docker version
            docker-compose version
            docker-compose -f ./../deployments/docker/docker-compose.yml build --force-rm --no-cache

  # run_app:
  #   description: Run the built image
  #   machine:
  #     image: ubuntu-1604:201903-01 
     
  #   steps:
  #     - run:
  #         name: Executing the run commands
  #         command: |
  #           echo $PROJECT_ID
  #           docker images
  #           docker run -d --name ${PROJECT_ID}-container -p 3002:3002 ${DOCKER_HUB_CONTEXT}/${PROJECT_ID}:$TAG
workflows:
  version: 2
  fb-api-docker-workflow:
    jobs:
      - build_app
      # - run_app:
      #     requires:
      #       - build_app



